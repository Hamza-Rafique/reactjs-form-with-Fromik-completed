{"ast":null,"code":"import _regeneratorRuntime from \"/Users/fe-mac-hamza/Downloads/React-Form-with-Formik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/fe-mac-hamza/Downloads/React-Form-with-Formik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _taggedTemplateLiteral from \"/Users/fe-mac-hamza/Downloads/React-Form-with-Formik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\nimport _objectSpread from \"/Users/fe-mac-hamza/Downloads/React-Form-with-Formik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/fe-mac-hamza/Downloads/React-Form-with-Formik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/fe-mac-hamza/Downloads/React-Form-with-Formik/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/fe-mac-hamza/Downloads/React-Form-with-Formik/src/index.js\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  margin-top: 1rem;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  font-size: 12px;\\n  color: var(--red-600);\\n  width: 400px;\\n  margin-top: 0.25rem;\\n  &:before {\\n    content: \\\"\\u274C \\\";\\n    font-size: 10px;\\n  }\\n  @media (prefers-color-scheme: dark) {\\n    color: var(--red-300);\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  color: var(--blue);\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Formik, Form, useField, useFormikContext } from \"formik\";\nimport * as Yup from \"yup\";\nimport styled from \"@emotion/styled\";\nimport \"./styles.css\";\nimport \"./styles-custom.css\";\n\nvar MyTextInput = function MyTextInput(_ref) {\n  var label = _ref.label,\n      props = _objectWithoutProperties(_ref, [\"label\"]);\n\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  var _useField = useField(props),\n      _useField2 = _slicedToArray(_useField, 2),\n      field = _useField2[0],\n      meta = _useField2[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    htmlFor: props.id || props.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, label), /*#__PURE__*/React.createElement(\"input\", Object.assign({\n    className: \"text-input\"\n  }, field, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  })), meta.touched && meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 9\n    }\n  }, meta.error) : null);\n};\n\nvar MyCheckbox = function MyCheckbox(_ref2) {\n  var children = _ref2.children,\n      props = _objectWithoutProperties(_ref2, [\"children\"]);\n\n  var _useField3 = useField(_objectSpread(_objectSpread({}, props), {}, {\n    type: \"checkbox\"\n  })),\n      _useField4 = _slicedToArray(_useField3, 2),\n      field = _useField4[0],\n      meta = _useField4[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"label\", {\n    className: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", Object.assign({}, field, props, {\n    type: \"checkbox\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 9\n    }\n  })), children), meta.touched && meta.error ? /*#__PURE__*/React.createElement(\"div\", {\n    className: \"error\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, meta.error) : null);\n}; // Styled components ....\n\n\nvar StyledSelect = styled.select(_templateObject());\nvar StyledErrorMessage = styled.div(_templateObject2());\nvar StyledLabel = styled.label(_templateObject3());\n\nvar MySelect = function MySelect(_ref3) {\n  var label = _ref3.label,\n      props = _objectWithoutProperties(_ref3, [\"label\"]);\n\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  var _useField5 = useField(props),\n      _useField6 = _slicedToArray(_useField5, 2),\n      field = _useField6[0],\n      meta = _useField6[1];\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(StyledLabel, {\n    htmlFor: props.id || props.name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }\n  }, label), /*#__PURE__*/React.createElement(StyledSelect, Object.assign({}, field, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }\n  })), meta.touched && meta.error ? /*#__PURE__*/React.createElement(StyledErrorMessage, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }, meta.error) : null);\n}; // And now we can use these\n\n\nvar SignupForm = function SignupForm() {\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }\n  }, \"Join us for more info\"), /*#__PURE__*/React.createElement(Formik, {\n    initialValues: {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      acceptedTerms: false,\n      // added for our checkbox\n      jobType: \"\" // added for our select\n\n    },\n    validationSchema: Yup.object({\n      firstName: Yup.string().max(15, \"Must be 15 characters or less\").required(\"Required\"),\n      lastName: Yup.string().max(20, \"Must be 20 characters or less\").required(\"Required\"),\n      email: Yup.string().email(\"Invalid email addresss`\").required(\"Required\"),\n      acceptedTerms: Yup.boolean().required(\"Required\").oneOf([true], \"You must accept the terms and conditions.\"),\n      jobType: Yup.string().oneOf([\"designer\", \"development\", \"product\", \"other\"], \"Invalid Job Type\").required(\"Required\")\n    }),\n    onSubmit: /*#__PURE__*/function () {\n      var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values, _ref4) {\n        var setSubmitting;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                setSubmitting = _ref4.setSubmitting;\n                _context.next = 3;\n                return new Promise(function (r) {\n                  return setTimeout(r, 500);\n                });\n\n              case 3:\n                setSubmitting(false);\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x, _x2) {\n        return _ref5.apply(this, arguments);\n      };\n    }(),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Form, {\n    className: \"form\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MyTextInput, {\n    label: \"First Name\",\n    name: \"firstName\",\n    type: \"text\",\n    placeholder: \"Hamza\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MyTextInput, {\n    label: \"Last Name\",\n    name: \"lastName\",\n    type: \"text\",\n    placeholder: \"Rafique\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MyTextInput, {\n    label: \"Email Address\",\n    name: \"email\",\n    type: \"email\",\n    placeholder: \"hamzarafique964@gmail.com\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(MySelect, {\n    label: \"Job Type\",\n    name: \"jobType\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, \"Select a job type\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"designer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }\n  }, \"Designer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"development\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 13\n    }\n  }, \"Developer\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"product\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 13\n    }\n  }, \"Product Manager\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"other\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 13\n    }\n  }, \"Other\")), /*#__PURE__*/React.createElement(MyCheckbox, {\n    name: \"acceptedTerms\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 11\n    }\n  }, \"I accept the terms and conditions\"), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 11\n    }\n  }, \"Submit\"))));\n};\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(SignupForm, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 10\n    }\n  });\n}\n\nvar rootElement = document.getElementById(\"root\");\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 17\n  }\n}), rootElement);","map":{"version":3,"sources":["/Users/fe-mac-hamza/Downloads/React-Form-with-Formik/src/index.js"],"names":["React","useEffect","ReactDOM","Formik","Form","useField","useFormikContext","Yup","styled","MyTextInput","label","props","field","meta","id","name","touched","error","MyCheckbox","children","type","StyledSelect","select","StyledErrorMessage","div","StyledLabel","MySelect","SignupForm","firstName","lastName","email","acceptedTerms","jobType","object","string","max","required","boolean","oneOf","values","setSubmitting","Promise","r","setTimeout","App","rootElement","document","getElementById","render"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Formik, Form, useField, useFormikContext } from \"formik\";\nimport * as Yup from \"yup\";\nimport styled from \"@emotion/styled\";\nimport \"./styles.css\";\nimport \"./styles-custom.css\";\n\nconst MyTextInput = ({ label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <label htmlFor={props.id || props.name}>{label}</label>\n      <input className=\"text-input\" {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\nconst MyCheckbox = ({ children, ...props }) => {\n  const [field, meta] = useField({ ...props, type: \"checkbox\" });\n  return (\n    <>\n      <label className=\"checkbox\">\n        <input {...field} {...props} type=\"checkbox\" />\n        {children}\n      </label>\n      {meta.touched && meta.error ? (\n        <div className=\"error\">{meta.error}</div>\n      ) : null}\n    </>\n  );\n};\n\n// Styled components ....\nconst StyledSelect = styled.select`\n  color: var(--blue);\n`;\n\nconst StyledErrorMessage = styled.div`\n  font-size: 12px;\n  color: var(--red-600);\n  width: 400px;\n  margin-top: 0.25rem;\n  &:before {\n    content: \"❌ \";\n    font-size: 10px;\n  }\n  @media (prefers-color-scheme: dark) {\n    color: var(--red-300);\n  }\n`;\n\nconst StyledLabel = styled.label`\n  margin-top: 1rem;\n`;\n\nconst MySelect = ({ label, ...props }) => {\n  // useField() returns [formik.getFieldProps(), formik.getFieldMeta()]\n  // which we can spread on <input> and alse replace ErrorMessage entirely.\n  const [field, meta] = useField(props);\n  return (\n    <>\n      <StyledLabel htmlFor={props.id || props.name}>{label}</StyledLabel>\n      <StyledSelect {...field} {...props} />\n      {meta.touched && meta.error ? (\n        <StyledErrorMessage>{meta.error}</StyledErrorMessage>\n      ) : null}\n    </>\n  );\n};\n\n// And now we can use these\nconst SignupForm = () => {\n  return (\n    <>\n      <h1>Join us for more info</h1>\n      <Formik\n        initialValues={{\n          firstName: \"\",\n          lastName: \"\",\n          email: \"\",\n          acceptedTerms: false, // added for our checkbox\n          jobType: \"\" // added for our select\n        }}\n        validationSchema={Yup.object({\n          firstName: Yup.string()\n            .max(15, \"Must be 15 characters or less\")\n            .required(\"Required\"),\n          lastName: Yup.string()\n            .max(20, \"Must be 20 characters or less\")\n            .required(\"Required\"),\n          email: Yup.string()\n            .email(\"Invalid email addresss`\")\n            .required(\"Required\"),\n          acceptedTerms: Yup.boolean()\n            .required(\"Required\")\n            .oneOf([true], \"You must accept the terms and conditions.\"),\n          jobType: Yup.string()\n          \n            .oneOf(\n              [\"designer\", \"development\", \"product\", \"other\"],\n              \"Invalid Job Type\"\n            )\n            .required(\"Required\")\n        })}\n        onSubmit={async (values, { setSubmitting }) => {\n          await new Promise(r => setTimeout(r, 500));\n          setSubmitting(false);\n        }}\n      >\n        <Form className='form'>\n          <MyTextInput\n            label=\"First Name\"\n            name=\"firstName\"\n            type=\"text\"\n            placeholder=\"Hamza\"\n          />\n          <MyTextInput\n            label=\"Last Name\"\n            name=\"lastName\"\n            type=\"text\"\n            placeholder=\"Rafique\"\n          />\n          <MyTextInput\n            label=\"Email Address\"\n            name=\"email\"\n            type=\"email\"\n            placeholder=\"hamzarafique964@gmail.com\"\n          />\n          <MySelect label=\"Job Type\" name=\"jobType\">\n            <option value=\"\">Select a job type</option>\n            <option value=\"designer\">Designer</option>\n            <option value=\"development\">Developer</option>\n            <option value=\"product\">Product Manager</option>\n            <option value=\"other\">Other</option>\n          </MySelect>\n          <MyCheckbox name=\"acceptedTerms\">\n            I accept the terms and conditions\n          </MyCheckbox>\n\n          <button type=\"submit\">Submit</button>\n        </Form>\n      </Formik>\n    </>\n  );\n};\n\nfunction App() {\n  return <SignupForm />;\n}\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(<App />, rootElement);\n"]},"metadata":{},"sourceType":"module"}